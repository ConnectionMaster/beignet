#include "string"
namespace gbe {
std::string simulator_str = 
"/* \n"
" * Copyright Â© 2012 Intel Corporation\n"
" *\n"
" * This library is free software; you can redistribute it and/or\n"
" * modify it under the terms of the GNU Lesser General Public\n"
" * License as published by the Free Software Foundation; either\n"
" * version 2 of the License, or (at your option) any later version.\n"
" *\n"
" * This library is distributed in the hope that it will be useful,\n"
" * but WITHOUT ANY WARRANTY; without even the implied warranty of\n"
" * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n"
" * Lesser General Public License for more details.\n"
" *\n"
" * You should have received a copy of the GNU Lesser General Public\n"
" * License along with this library. If not, see <http://www.gnu.org/licenses/>.\n"
" *\n"
" * Author: Benjamin Segovia <benjamin.segovia@intel.com>\n"
" */\n"
"\n"
"/**\n"
" * \\file simulator.h\n"
" * \\author Benjamin Segovia <benjamin.segovia@intel.com>\n"
" *\n"
" * C interface for the gen simulator\n"
" */\n"
"\n"
"#ifndef __GBE_SIMULATOR_H__\n"
"#define __GBE_SIMULATOR_H__\n"
"\n"
"#include <stdlib.h>\n"
"#ifdef __cplusplus\n"
"extern \"C\" {\n"
"#endif /* __cplusplus */\n"
"\n"
"/* Gen simulator that runs the c++ produced by the back-end */\n"
"typedef struct _gbe_simulator *gbe_simulator;\n"
"/* Get / set the base address of the global / constant memory space */\n"
"typedef void *(sim_get_base_address_cb)(gbe_simulator);\n"
"typedef void (sim_set_base_address_cb)(gbe_simulator, void*);\n"
"/* Get / set the base address of the constant buffer */\n"
"typedef void *(sim_get_curbe_address_cb)(gbe_simulator);\n"
"typedef void (sim_set_curbe_address_cb)(gbe_simulator, void*);\n"
"/* Get / set per-thread curbe size */\n"
"typedef void (sim_set_curbe_size_cb)(gbe_simulator, size_t);\n"
"typedef size_t (sim_get_curbe_size_cb)(gbe_simulator);\n"
"struct _gbe_simulator {\n"
"  sim_set_base_address_cb *set_base_address;\n"
"  sim_get_base_address_cb *get_base_address;\n"
"  sim_set_curbe_address_cb *set_curbe_address;\n"
"  sim_get_curbe_address_cb *get_curbe_address;\n"
"  sim_set_curbe_size_cb *set_curbe_size;\n"
"  sim_get_curbe_size_cb *get_curbe_size;\n"
"};\n"
"\n"
"#ifdef __cplusplus\n"
"}\n"
"#endif /* __cplusplus */\n"
"\n"
"#endif /* __GBE_SIMULATOR_H__ */\n"
"\n"
;
}

